                        #Criar programa onde:
#~> 4 jogadores participem e tenham resultados aleatÃ³rios
#~> OpÃ§Ã£o de quantos lances de dados querem fazer, e guardar os resultados das rodadas em um dict.
#~> Ordenar o dict onde serÃ¡ informado qual jogador venceu mais rodadas, sendo o grande campeÃ£o.

print('''
                        Jogo ðŸŽ²ðŸŽ²ðŸŽ² Dados
                     ðŸŽ²ðŸŽ²ðŸŽ²ðŸŽ² dos ðŸŽ²ðŸŽ²ðŸŽ²ðŸŽ²
''') #animaÃ§Ã£o em emoji de dados para animar o jogo em reproduÃ§Ã£o(copy/paste)simples.
#vou fazer as importaÃ§Ãµes que permitirÃ£o a execuÃ§Ã£o do jogo:
from random import randint #Random para que os dados sejam lanÃ§ados aleatÃ³riamente.
import operator #Operator para ordenar os dicionarios em ordem e por valor das chaves.
from time import sleep #Sleep para que haja uma pausa entre as animaÃ§Ãµes e/ou resultados do jogo.

#Em rodadas os jogadores decidiram quantos lances de dados querem fazer.
rodada = int(input('Quantas vezes vocÃª quer lanÃ§ar os dados? '))
sleep(1)
placar = list() #As listas recebem dicionÃ¡rios.
jogador1 = jogador2 = jogador3 = jogador4 = 0 #Aqui vÃ£o ser exibidos os resultados das partidas.
empates = jogador1 = jogador2 = jogador3 = jogador4 != 0
print('Iniciando a partida!')
sleep(.5)
print('  ðŸŽ² ')
sleep(.5)
print(' ðŸŽ²ðŸŽ²')
sleep(.5)
print('ðŸŽ²ðŸŽ²ðŸŽ²')
sleep(.5)
for r in range(rodada):
    rodada = dict() #Aqui ficarÃ£o armazenadas as informaÃ§Ãµes de cada partida.
    rodada =  {'jogador1': randint(1, 6),
               'jogador2': randint(1, 6), #~> Randint farÃ¡ a aleatoridade dos lances.
               'jogador3': randint(1, 6),
               'jogador4': randint(1, 6),}
    sleep(1)
    print(f'{r + 1}Âº rodada: {rodada}')
    sleep(1)
    if  (rodada['jogador3'] < rodada['jogador1'] > rodada['jogador2']) and rodada['jogador1'] > rodada['jogador4']:
         jogador1+=1
    elif(rodada['jogador3'] < rodada['jogador2'] > rodada['jogador1']) and rodada['jogador2'] > rodada['jogador4']:
         jogador2+=1
    elif(rodada['jogador2'] < rodada['jogador3'] > rodada['jogador1']) and rodada['jogador3'] > rodada['jogador4']:
         jogador3+=1
    elif(rodada['jogador3'] < rodada['jogador4'] > rodada['jogador2']) and rodada['jogador4'] > rodada['jogador1']:
         jogador4+=1
    sortedResult = sorted(rodada.items(), key=operator.itemgetter(1), reverse=True)
    placar.append(sortedResult)
if (jogador2 < jogador1 > jogador3) and jogador1 > jogador4: # Estrutura condicional para demonstrar quem ganhou mais rodadas
    print(f'O CAMPEÃƒO Ã‰ O JOGADOR 1 COM {jogador1} VITÃ“RIAS.')
elif (jogador3 < jogador2 > jogador1) and jogador2 > jogador4: 
    print(f'O CAMPEÃƒO Ã‰ O JOGADOR 2 COM {jogador2} VITÃ“RIAS.')
elif (jogador2 < jogador3 > jogador1) and jogador3 > jogador4:
    print(f'O CAMPEÃƒO Ã‰ O JOGADOR 3 COM {jogador3} VITÃ“RIAS.')
elif (jogador2 < jogador4 > jogador1) and jogador4 > jogador1:
    print(f'O CAMPEÃƒO Ã‰ O JOGADOR 4 COM {jogador4} VITÃ“RIAS.')
else:
    print(f'Empate!! NÃ£o houveram CampeÃµes na Partida')
print(f'=====PLACAR FINAL=====')
log = input(f'Deseja verificar o histÃ³rico de jogadas? [S/N] ').upper().strip()[0] # ExbibiÃ§Ã£o da lista com todas as rodadas
if log == 'S':
    print(f'Jogadas para conferÃªncia: {placar}')
    
print('''     
             
 ObrigadoðŸŽ²ðŸŽ²ðŸŽ²ðŸŽ²ðŸŽ² Jogar!
      ðŸŽ²ðŸŽ²ðŸŽ²PorðŸŽ²ðŸŽ²ðŸŽ²ðŸŽ²
''')
